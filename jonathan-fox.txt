1. What is Semantic HTML? 
    2. What is HTML used for? 
        - HTML is used to define the basic structure and components of a webpage.
    3. What is an attribute and where do we put it? 
        - An attribute specifies certain behavior to customize HTML elements. We put attributes in the HTML tag between the <> brackets.
    4. What is the h1 tag used for? How many times should I use it on a page?
        - The h1 tag is used to denote a header, specifically the largest and most important header. It should be used sparingly, probably only once per page.
    5. Name two tags that have required attributes
        - <input> and <select>
    6. What do we put in the head of our HTML document? 
        - The head is for metadata, or information about the webpage, not actual HTML elements. This includes <title>, <style> and <link>.
    7. What is an id? 
        - An id is a string used to identify a single HTML element on the page.
    8. What elements can I add an id to? 
        - ANY HTML element can have an id added to it.
    9. How many times can I use the same id on a page? 
        - It will only work once.
    10. What is a class? 
        - A class is a string used to identify multiple HTML elements on the page.
    11. What elements can I add a class to? 
        - ANY of them, like id.
    12. How many times can I use the same class on a page? 
        - As many times as you want.
    13. How do I get my link to open in a new tab?
        - Set the target attribute to "_blank".
    14. What is the alt attribute in the image tag used for? 
        - The alt attribute is a text description of your image. It is used for screenreaders and identification for services like Google SEO.
    15. How do I reference an id?
        - An id is referenced in CSS with a hashtag. (e.g. #my-item)
    16. What is the difference between a section and a div
        - They are rendered the same way, but making something a section implies that it is one grouped section of content on the page.
    17. What is CSS used for? 
        - CSS is used for styling HTML elements.
    18. How to we select an element? Example - every h2 on the page
        - Simply put the name of the element: h2.
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
        - id is for a single element, class is for multiple. id could be used for "#navbar". Class could be used for ".navbar-link".
    20. How do we select classes in CSS?
        - Classes are selected with a period. (e.g: .my-class)
    21. How do we select a p element with a single class of “human””?
        - p.human
    22. What is a parent child selector? When would this be useful? 
        - It selects children that have a certain kind of parent. This is useful if you want to style certain p elements differently based on what section they're in.
    23. How do you select all links within a div with the class of sidebar?
        - div a.sidebar
    24. What is a pseudo selector?
        - pseudo selectors are used for special behavior on normal selectors. For example, :hover is used to style an element when its being hovered.
    25. What do we use the change the spacing between lines?
        - line-height
    26. What do we use to change the spacing between letters?
        - letter-spacing
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
        - text-transform
    28. How do I add a 1px border around my div that is dotted and black?
        - border: 1px dotted black
    29. How do I select everything on the page? 
        - *
    30. How do I write a comment in CSS?
        - /* This is my comment */
    31. How do I find out what file I am in, when I am using the command line? 
        - pwd
    32. Using the command line - how do I see a list of files/folders in my current folder?
        - ls
    33. How do I remove a file via the command line? Why do I have to be careful with this? 
        - rm. It's dangerous because it will remove anything without asking if you're sure.
    34. Why should I use version control? 
        - Allows you to go back to previous versions of the code in case something breaks or something needs to be referenced.
    35. How often should I commit to github?
        - Very often, so that you don't lose your work.
    36. What is the command we would use to push our repo up to github? 
        - git push origin branch-name
    37. Walk me through Lambda's git flow. 
        - Fork the repo onto my own account.
        - Clone the repo onto my computer.
        - git checkout -b jonathan-fox
        - (Do the work)
        - git add .
        - git commit -m "commit message"
        - git push origin jonathan-fox
        - Make a pull request for my changes.
        - Submit the pull request link in Canvs.

Stretch Questions

    1. What is the difference between an inline element and a block element?
        - inline element will only take up the width of whatever is inside it. A block level element takes up all width possible, moving itself to a new line and anything after it to other lines.
    2. What happens when an element is positioned absolutely? 
        - An absolutely positioned element is positioned off of its parent element and nothing else.
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
        - inline-block
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
        - display block: p, h1, div
        - display inline: span, b
        - display inline-block: input 
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 
        - HTML elements are sized based on multiple attributes. The inner content size is based on the width and height of the element. Outside that is padding, then border, then margin. The problem with this is that when you set the width and height, it only changes the inner content, not the actual size of the box on the page.
        - This can cause the size to change when you don't intend to, and it makes it hard to specify exactly how big you want your elements to be.
        - The fix is "box-sizing: border-box". It includes the border, padding, and margin when sizing the element, which means when you set the width of the element, that will be the actual width.




   --> 